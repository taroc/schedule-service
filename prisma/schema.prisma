generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String             @id
  password       String
  createdAt      DateTime           @default(now()) @map("created_at")
  updatedAt      DateTime           @updatedAt @map("updated_at")
  participations EventParticipant[]
  createdEvents  Event[]
  schedules      UserSchedule[]

  @@map("users")
}

model Event {
  id                   String             @id
  name                 String
  description          String
  requiredParticipants Int                @map("required_participants")
  requiredDays         Int                @map("required_days")
  requiredTimeSlots    Int?               @map("required_time_slots")
  creatorId            String             @map("creator_id")
  status               String             @default("open")
  matchedDates         String?            @map("matched_dates")
  matchedTimeSlots     String?            @map("matched_time_slots")
  deadline             DateTime?
  createdAt            DateTime           @default(now()) @map("created_at")
  updatedAt            DateTime           @updatedAt @map("updated_at")
  
  // 期間指定フィールド（必須）
  periodStart          DateTime           @map("period_start")
  periodEnd            DateTime           @map("period_end")
  reservationStatus    String             @default("open") @map("reservation_status")
  
  participants         EventParticipant[]
  creator              User               @relation(fields: [creatorId], references: [id], onDelete: Cascade)

  @@index([creatorId])
  @@index([status])
  @@index([reservationStatus])
  @@index([periodStart])
  @@index([periodEnd])
  @@map("events")
}

model EventParticipant {
  eventId  String   @map("event_id")
  userId   String   @map("user_id")
  joinedAt DateTime @default(now()) @map("joined_at")
  event    Event    @relation(fields: [eventId], references: [id], onDelete: Cascade)
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([eventId, userId])
  @@index([eventId])
  @@index([userId])
  @@map("event_participants")
}

model UserSchedule {
  id                 String   @id
  userId             String   @map("user_id")
  date               DateTime
  timeSlotsDaytime   Boolean  @default(false) @map("time_slots_daytime")
  timeSlotsEvening   Boolean  @default(false) @map("time_slots_evening")
  createdAt          DateTime @default(now()) @map("created_at")
  updatedAt          DateTime @updatedAt @map("updated_at")
  user               User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, date])
  @@index([userId])
  @@index([date])
  @@index([userId, date])
  @@map("user_schedules")
}
